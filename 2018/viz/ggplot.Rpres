<style>
.small-code pre code {
  font-size: 1.2em;
}
</style>

Visualization in R
========================================================
author: Lizzie Kumar & Isha Raut
date: April 2, 2018
autosize: true

ggplot2
========================================================

- Library in R that makes nice graphics
- Makes creation of good looking, useful graphics much easier than base R
- Can make very diverse plots

Definitions
========================================================

- Aesthetics: mapping of information to a visual property
  - Color
  - Position
- Makes creation of good looking, useful graphics much easier than base R
- Can make very diverse plots

Set Up
========================================================
```{r}
# install.packages('ggplot2')
library('ggplot2')
```

Data
========================================================
class: small-code
```{r}
# install.packages('nycflights13')
# install.packages('dplyr')
library(nycflights13)
library(dplyr)
head(flights)
```

Basic Plots
========================================================
- Scatter Plot
- Line Chart
- Bar Chart
- Histogram
- Density Plot
- Box Plot

Initialization
========================================================
- Initialize empty graphic
- We will add our plot to this base plot
- Feed base plot data, x and y values

Initialization Continued
========================================================
class: small-code
```{r fig.width=18}
plot <- ggplot(flights, aes(dep_delay, arr_delay))
plot
```


Scatter Plot
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point()
```

Scatter Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point(colour='blue', size=5, shape=25, alpha=.01)
```

Scatter Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point(aes(colour=factor(origin)))
```

Scatter Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point(aes(size=distance, shape=factor(origin)))
```

Scatter Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point(aes(shape=factor(origin)))
```

Line Chart
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point() + geom_smooth()
```

Line Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point() + geom_smooth(span=.01)
```

Line Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point() + geom_smooth(span=.9)
```

Line Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point() + geom_smooth(method='lm')
```

Line Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_point() + geom_smooth(aes(colour=factor(origin)), method='lm')
```

Box Plot
========================================================
class: small-code
```{r fig.width=18}
plot2 <- ggplot(flights, aes(distance, air_time))
plot2 + geom_boxplot()
```

Box Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot2 + geom_boxplot(fill='lightblue', colour='black')
```

Box Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot2 + geom_boxplot(outlier.colour='red', outlier.shape=25)
```

Box Plot Continued
========================================================
class: small-code
```{r fig.width=18}
plot2 + geom_boxplot(aes(colour=factor(origin)))
```

Bar Chart
========================================================
class: small-code
```{r fig.width=18}
plot <- ggplot(flights, aes(carrier))
plot + geom_bar()
```

Bar Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_bar(aes(weight=arr_delay))
```

Bar Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_bar(aes(fill=factor(origin)))
```

Bar Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_bar(aes(fill=factor(origin)), position='dodge')
```

Bar Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_bar(aes(fill=factor(origin)), position='fill')
```

Histogram
========================================================
class: small-code
```{r fig.width=18}
plot <- ggplot(flights, aes(arr_delay))
plot + geom_histogram()
```

Histogram Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_histogram(binwidth = 0.5)
```

Histogram Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_histogram(bins = 100)
```

Histogram Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_histogram(aes(fill=factor(origin)))
```

Histogram Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_histogram(aes(colour=factor(origin)))
```

Density Chart
========================================================
class: small-code
```{r fig.width=18}
plot + geom_density()
```

Density Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_density(adjust=.01)
```

Density Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_density(adjust=100)
```

Density Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_density(aes(colour=factor(origin), fill=factor(origin)))
```

Density Chart Continued
========================================================
class: small-code
```{r fig.width=18}
plot + geom_density(aes(colour=factor(origin), fill=factor(origin)), position='stack')
```

Density Chart Continued
========================================================
class: small-code
```{r fig.width=18}
ggplot(flights, aes(arr_delay, ..count.., colour=factor(origin),
                    fill = factor(origin))) +
  geom_density(position='stack')
```

Map Data
========================================================
class: small-code
```{r}
# install.packages('maps')
# install.packages('choroplethr')
require(maps)
require(choroplethr)
data(df_state_demographics)
states <- map_data('state')
data <- merge(df_state_demographics, states, by='region')
```

Map Data
========================================================
class: small-code
```{r}
head(data)
```

Basic Map
========================================================
class: small-code
```{r fig.width=18}
plot <- ggplot(data, aes(long, lat))
plot + geom_polygon(aes(group=group, fill=median_rent))
```

More Complex Maps
========================================================
class: small-code
```{r fig.width=18}
plot +
  # add outlines
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2()
```

More Complex Maps
========================================================
class: small-code
```{r eval=FALSE}
plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  # add new color information
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue')
```

More Complex Maps
========================================================
class: small-code
```{r fig.width=18, echo=FALSE}
plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue')
```


More Complex Maps
========================================================
class: small-code
```{r eval=FALSE}
new_plot <- plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue')
```

More Complex Maps
========================================================
class: small-code
```{r eval=FALSE}
# remove all of background that is unnecessary
new_plot +
    theme(axis.line = element_blank(), axis.text.x = element_blank(),
        axis.text.y = element_blank(), axis.ticks = element_blank(),
        axis.title.x = element_blank(), axis.title.y = element_blank(),
        panel.background = element_blank(), panel.border = element_blank(),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        plot.background = element_blank())
```

More Complex Maps
========================================================
class: small-code
```{r echo=FALSE, fig.width=18}
plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue') +
    theme(axis.line = element_blank(), axis.text.x = element_blank(),
        axis.text.y = element_blank(), axis.ticks = element_blank(),
        axis.title.x = element_blank(), axis.title.y = element_blank(),
        panel.background = element_blank(), panel.border = element_blank(),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        plot.background = element_blank())
```

More Complex Maps
========================================================
class: small-code
```{r}
labels <- data %>% group_by(region) %>% summarise(lat=mean(unique(lat)), long=mean(unique(long)))
head(labels)
```

More Complex Maps
========================================================
class: small-code
```{r eval=FALSE}
new_plot <- plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue') +
    theme(axis.line = element_blank(), axis.text.x = element_blank(),
        axis.text.y = element_blank(), axis.ticks = element_blank(),
        axis.title.x = element_blank(), axis.title.y = element_blank(),
        panel.background = element_blank(), panel.border = element_blank(),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        plot.background = element_blank())
```

More Complex Maps
========================================================
class: small-code
```{r echo=FALSE, fig.width=18}
plot +
  geom_polygon(aes(group=group, fill=median_rent),
               colour='black', size = .2, alpha = 0.5) +
  scale_fill_gradient2(midpoint = median(data$median_rent),
                       limits=c(min(data$median_rent),
                                max(data$median_rent)),
                       low='red', mid='white', high='blue') +
  theme(axis.line = element_blank(), axis.text.x = element_blank(),
        axis.text.y = element_blank(), axis.ticks = element_blank(),
        axis.title.x = element_blank(), axis.title.y = element_blank(),
        panel.background = element_blank(), panel.border = element_blank(),
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        plot.background = element_blank()) +
  annotate("text", x=labels$long, y=labels$lat, label=labels$region,
           color = "midnightblue", size = 3)

```

Resources
========================================================

- <http://docs.ggplot2.org/current/>
- <https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf>
- This Presentation: <https://github.com/massmutual/datafest2016>

Feedback
========================================================
- <http://goo.gl/forms/rHnscEWjTL>
